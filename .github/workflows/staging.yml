name: Terraform staging

on:
  workflow_dispatch:

jobs:
  plan:
    name: Plan
    runs-on: ubuntu-latest
    env:
      environment: staging
      working-directory: ./terraform
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    environment: staging
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform  
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ${{env.working-directory}}
      run: terraform init

    - name: Workspace logic
      working-directory: ${{env.working-directory}}
      run: terraform workspace select ${{env.environment}} || terraform workspace new ${{env.environment}}

    - name: Terraform Validate
      working-directory: ${{env.working-directory}}
      run: terraform validate

    - name: Terraform Plan
      id: plan
      working-directory: ${{env.working-directory}}
      run: terraform plan -out ../artifacts/staging-tfplan -input=false

    - name: Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: staging-tfplan
        path: artifacts/staging-tfplan

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  deploy:
    name: Build
    runs-on: ubuntu-latest
    env:
      environment: staging
      working-directory: ./terraform
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    environment: staging
    needs: plan
    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: staging-tfplan
        path: artifacts/

    - name: Set-Up Dependnacies
      run: |
# sudo yum install https://github.com/PowerShell/PowerShell/releases/download/v6.0.0-alpha.12/powershell-6.0.0_alpha.12-1.el7.centos.x86_64.rpm
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo '# Set PATH, MANPATH, etc., for Homebrew.' >> /home/runner/.bash_profile
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> /home/runner/.bash_profile
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    # - name: echo Path
    #   run: |
    #       echo $PATH

    # - name: Install PowerShell
    #   run: |
    #       brew install --cask powershell

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ${{env.working-directory}}
      run: terraform init

    - name: Workspace logic
      working-directory: ${{env.working-directory}}
      run: terraform workspace select ${{env.environment}}

    - name: Terraform Apply
      # if: github.ref == 'refs/heads/main'
      working-directory: ${{env.working-directory}}
      run: terraform apply ../artifacts/staging-tfplan
